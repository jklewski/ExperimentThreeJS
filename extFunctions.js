colorMap = function(name){
    
    console.log(name + " selected, but not implemented yet")
    var colorData = { "R": [251, 255, 214, 255, 192, 240, 172, 228, 154, 218, 138, 209, 123, 202, 110, 197, 99, 193, 90, 192, 82, 192, 77, 194, 72, 197], "G": [221, 253, 162, 218, 151, 211, 140, 205, 130, 200, 120, 196, 111, 193, 102, 190, 93, 188, 85, 187, 77, 186, 70, 186, 63, 187], "B": [176, 224, 112, 194, 112, 193, 111, 192, 109, 191, 106, 190, 103, 189, 98, 188, 93, 187, 87, 186, 79, 184, 71, 183, 62, 181], "Name": "Spruce" }
    var colorNew = { "R": [], "G": [], "B": [] }
    for (let j = 0; j < 12; j++) {
        var lwR = colorData.R[(j * 2)]
        var ewR = colorData.R[(1 + j * 2)]
        var colorTemp = [];
        for (let i = 0; i < 256; i++) {
            var diff = (ewR - lwR) / 255
            colorTemp[i] = lwR + diff * i
        }
        colorNew.R.push(...colorTemp)
    }
    for (let j = 0; j < 12; j++) {
        var lwR = colorData.G[(j * 2)]
        var ewR = colorData.G[(1 + j * 2)]
        var colorTemp = [];
        for (let i = 0; i < 256; i++) {
            var diff = (ewR - lwR) / 255
            colorTemp[i] = lwR + diff * i
        }
        colorNew.G.push(...colorTemp)
    }
    for (let j = 0; j < 12; j++) {
        var lwR = colorData.B[(j * 2)]
        var ewR = colorData.B[(1 + j * 2)]
        var colorTemp = [];
        for (let i = 0; i < 256; i++) {
            var diff = (ewR - lwR) / 255
            colorTemp[i] = lwR + diff * i
        }
        colorNew.B.push(...colorTemp)
    }
    var wclr = colorNew;
    return wclr
    }

colorMap2 = function(name){
    var database = [{"name":["accoya, translucida noce, idro-olio"],"R":[121,110,117,108,115,106,114,105,114,104,114,104,114,104,115,105,116,105,117,106,118,107,120,108,121,109,121,109,121,110,121,110,121,110,120,110,119,109,119,107,118,106],"G":[81,75,78,73,77,71,76,70,75,69,75,68,74,67,74,67,74,67,74,67,74,67,74,68,75,68,75,68,75,69,75,69,74,68,74,67,73,66,71,64,70,62],"B":[46,42,49,46,51,48,53,50,55,52,55,52,56,53,56,54,57,54,57,55,58,55,58,55,58,55,58,55,58,55,57,55,57,55,56,54,56,52,55,51,54,49]},{"name":["accoya, translucida noce, acqua"],"R":[151,132,147,127,145,124,144,123,144,122,144,122,145,123,146,123,147,125,148,126,149,127,150,128,151,129,151,129,152,129,151,129,151,128,150,127,150,126,149,126,148,125],"G":[98,83,97,82,96,81,96,80,96,79,96,79,96,79,96,79,96,79,96,79,97,79,97,79,97,79,97,79,98,79,97,78,97,77,96,76,95,75,94,74,92,73],"B":[49,39,54,44,57,48,60,50,61,51,62,52,62,53,62,53,62,54,62,54,63,54,63,54,63,54,63,54,63,54,63,54,62,53,61,52,59,50,57,48,55,45]},{"name":["accoya, pigmentato bianco, finestre"],"R":[221,220,221,220,220,220,219,218,218,216,216,214,214,213,212,211,210,209,209,208,208,207,207,206,206,205,206,205,206,205,206,205,205,205,205,204,204,203,203,202,201,200],"G":[218,214,219,218,219,220,219,220,218,220,218,219,217,218,217,218,216,217,215,216,215,216,214,215,214,215,214,215,213,215,212,214,211,213,210,211,209,209,207,207,205,204],"B":[196,196,202,204,207,209,210,210,211,211,212,211,212,211,211,210,211,209,210,208,209,208,209,208,208,208,208,208,209,208,209,207,209,207,207,205,205,204,203,201,200,199]},{"name":["tricoia, pigmentato bianco, cladding"],"R":[221,221,221,221,220,220,218,218,216,215,214,213,212,211,210,209,209,208,208,206,207,205,206,204,205,204,205,203,205,202,204,202,204,201,204,200,203,199,202,198,201,197],"G":[220,221,221,221,222,221,221,221,220,220,219,218,217,216,216,215,214,214,213,212,212,211,211,210,211,210,211,209,211,208,210,207,210,206,209,205,208,204,206,203,204,202],"B":[200,200,205,205,210,210,214,213,215,214,214,213,212,211,211,210,209,208,208,207,207,206,206,205,206,204,206,203,206,202,206,201,205,200,204,199,203,198,201,198,199,197]},{"name":["spruce thermo D212 degC"],"R":[139,114,148,117,155,119,161,121,165,123,169,125,171,128,173,131,174,133,175,136,175,139,175,140,174,142,174,142,174,142,173,141,172,140,171,139,170,137,169,136,168,135],"G":[103,93,116,93,125,92,133,92,139,93,145,94,150,96,154,98,156,99,158,101,159,103,160,105,160,106,161,107,161,108,161,109,160,110,159,111,157,111,154,112,151,113],"B":[66,58,79,60,91,62,100,64,108,67,114,69,119,71,124,74,128,76,131,78,134,80,136,82,138,84,140,86,142,87,143,88,143,89,142,90,140,90,138,90,134,90]},{"name":["spruce thermo D212 degC + FeSO4"],"R":[110,85,114,82,118,81,122,82,127,84,133,87,138,90,143,94,147,97,150,101,152,105,154,108,155,111,156,112,157,114,158,115,160,116,161,118,163,120,165,123,167,127],"G":[86,69,92,69,98,68,104,67,111,67,117,68,123,69,129,71,133,74,137,78,140,82,143,86,145,90,147,93,148,96,148,99,148,101,149,102,149,103,149,103,149,103],"B":[53,49,63,50,72,53,80,55,88,57,95,58,102,60,108,62,113,65,117,68,121,71,124,75,126,78,128,82,129,85,129,87,129,88,129,88,128,86,128,83,127,80]},{"name":["pine heart wood LT dried 50-70 degC"],"R":[210,195,210,174,210,158,210,147,208,139,206,135,203,132,201,131,199,130,197,130,196,130,194,131,193,132,192,133,190,134,189,135,187,136,185,136,183,135,181,134,179,133],"G":[160,152,170,136,175,125,177,117,177,112,177,109,176,107,175,106,175,106,174,106,174,107,173,107,173,108,173,109,173,110,173,110,173,111,172,111,172,111,171,111,169,111],"B":[111,99,125,93,135,90,143,87,149,86,153,86,155,87,157,88,158,90,158,92,158,95,157,96,157,97,157,97,157,97,157,95,157,93,157,91,156,89,156,87,155,84]},{"name":["pine thermo D212 degC"],"R":[141,135,163,143,177,149,184,153,187,156,189,158,189,159,189,159,189,158,188,156,188,154,187,152,186,150,185,147,185,144,184,142,183,140,183,138,183,136,182,134,182,133],"G":[105,96,130,110,149,120,160,127,167,131,171,133,172,135,173,136,173,136,173,137,172,137,172,137,171,137,171,137,170,136,170,135,169,133,169,131,170,129,170,126,171,123],"B":[65,56,89,71,109,83,123,92,133,99,140,104,144,107,147,110,148,112,148,114,148,115,148,116,147,116,148,117,149,117,150,117,151,117,151,117,151,116,150,114,150,113]},{"name":["dark samples treated"],"R":[72,67,80,72,87,77,92,80,96,83,100,85,102,87,104,88,105,89,105,89,105,90,104,89,103,89,102,89,101,88,100,88,99,87,98,86,97,84,96,83,95,81],"G":[59,56,64,59,68,61,72,63,74,64,75,65,75,66,76,66,76,66,77,66,77,66,77,66,77,67,77,67,77,67,77,67,76,67,75,66,73,64,71,61,69,58],"B":[39,37,46,41,51,44,56,46,59,49,61,51,63,52,64,54,64,55,65,56,65,57,65,57,65,58,65,58,64,58,64,57,63,57,62,55,60,53,58,51,56,48]},{"name":["light treated wood no impregnation"],"R":[138,123,161,132,177,138,185,143,189,147,190,149,190,152,189,154,189,156,189,158,189,160,189,162,190,163,190,164,191,164,192,164,192,164,192,163,191,162,189,161,188,159],"G":[111,97,137,110,156,120,168,127,174,133,178,137,179,140,180,143,180,146,179,148,179,150,179,152,179,154,179,155,180,156,180,156,181,155,181,155,180,153,180,152,179,150],"B":[77,67,107,83,129,95,144,105,153,113,159,120,162,125,164,129,164,133,164,136,163,139,163,141,163,143,164,145,165,146,167,146,168,146,169,145,169,143,168,141,166,138]}];

    var colorData = { "R": database[0].R, "G": database[0].G, "B": database[0].B, "Name": database[0].name}
    var colorNew = { "R": [], "G": [], "B": [] }
    for (let j = 0; j < 12; j++) {
        var lwR = colorData.R[(j * 2)]
        var ewR = colorData.R[(1 + j * 2)]
        var colorTemp = [];
        for (let i = 0; i < 256; i++) {
            var diff = (ewR - lwR) / 255
            colorTemp[i] = lwR + diff * i
        }
        colorNew.R.push(...colorTemp)
    }
    for (let j = 0; j < 12; j++) {
        var lwR = colorData.G[(j * 2)]
        var ewR = colorData.G[(1 + j * 2)]
        var colorTemp = [];
        for (let i = 0; i < 256; i++) {
            var diff = (ewR - lwR) / 255
            colorTemp[i] = lwR + diff * i
        }
        colorNew.G.push(...colorTemp)
    }
    for (let j = 0; j < 12; j++) {
        var lwR = colorData.B[(j * 2)]
        var ewR = colorData.B[(1 + j * 2)]
        var colorTemp = [];
        for (let i = 0; i < 256; i++) {
            var diff = (ewR - lwR) / 255
            colorTemp[i] = lwR + diff * i
        }
        colorNew.B.push(...colorTemp)
    }
    var wclr = colorNew;
    return wclr
    }

function mapColor(imdata,imdataOriginalDose,time) {
    const width = 1024;
    const height = 1024;
    const size = width * height;
    var data = new Uint8Array(4 * size);
    var value = [];
    for (let i = 0; i < imdata.data.length; i += 4) {
    //calculate dose at pixel i
        value = (time/100) * (imdataOriginalDose[i]/255) * 10
        let idHigh = imdata.data[i] + 255 * Math.ceil(value)
        let idLow = imdata.data[i] + 255 * Math.floor(value)
        data[i] = Math.pow((wclr.R[idLow] + (wclr.R[idHigh] - wclr.R[idLow]) * (value - Math.floor(value)))/255,2.2)*255;
        data[i + 1] = Math.pow((wclr.G[idLow] + (wclr.G[idHigh] - wclr.G[idLow]) * (value - Math.floor(value)))/255,2.2)*255;
        data[i + 2] = Math.pow((wclr.B[idLow] + (wclr.B[idHigh] - wclr.B[idLow]) * (value - Math.floor(value)))/255,2.2)*255;
        data[i + 3] = 255
    }
    return data
}